{"ast":null,"code":"var _jsxFileName = \"D:\\\\Desktop\\\\Mentor\\\\planets-fact-site-task6\\\\task6\\\\src\\\\ButtonGroup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styled from \"./App.css\";\nimport data from \"./data.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst types = [\"01  Overview\", \"02   Internal Structure\", \"03   Surface Geology\"];\nfunction ButtonGroup() {\n  _s();\n  const [active, setActive] = useState(types[0]);\n  const Button =\n  // styled.button\n  `width: 350px;\n    height: 48px;\n    margin-bottom: 16px;\n    padding-left: 28px;\n    \n    background-color: #231d2b;\n    color:white;\n    font-family: 'Spartan', sans-serif;\n    font-weight: 700;\n    font-size: 12px;\n    line-height: 25px;\n    letter-spacing: 2.57143px;\n    text-transform: uppercase;\n    cursor: pointer;\n    text-align: left;\n    border: 1px solid rgba(255, 255, 255, .2);\n    \n    &:disabled {\n        backgroundColor: {data[1].colorit};\n        cursor: default;\n    }`;\n  const ButtonToggle =\n  //  styled(Button)\n  `background-color: #231d2b;\n      ${_ref => {\n    let {\n      active\n    } = _ref;\n    return active && `backgroundColor: {data[1].colorit};`;\n  }}\n    `;\n  return types.map(type => /*#__PURE__*/_jsxDEV(ButtonToggle, {\n    active: active === type,\n    onClick: () => setActive(type),\n    children: type\n  }, type, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 11\n  }, this));\n}\n_s(ButtonGroup, \"9c8rs/m2BfbrEewVsOzi9z6dNX4=\");\n_c = ButtonGroup;\nexport default ButtonGroup;\nvar _c;\n$RefreshReg$(_c, \"ButtonGroup\");","map":{"version":3,"names":["React","useState","styled","data","types","ButtonGroup","active","setActive","Button","ButtonToggle","map","type"],"sources":["D:/Desktop/Mentor/planets-fact-site-task6/task6/src/ButtonGroup.js"],"sourcesContent":["import  React, { useState } from \"react\";\r\nimport styled from \"./App.css\"\r\nimport data from \"./data.json\";\r\n\r\nconst types = [\"01  Overview\", \"02   Internal Structure\", \"03   Surface Geology\"];\r\n\r\n\r\nfunction ButtonGroup(){\r\n    const [active, setActive] = useState(types[0]);\r\n    const Button = \r\n    // styled.button\r\n    `width: 350px;\r\n    height: 48px;\r\n    margin-bottom: 16px;\r\n    padding-left: 28px;\r\n    \r\n    background-color: #231d2b;\r\n    color:white;\r\n    font-family: 'Spartan', sans-serif;\r\n    font-weight: 700;\r\n    font-size: 12px;\r\n    line-height: 25px;\r\n    letter-spacing: 2.57143px;\r\n    text-transform: uppercase;\r\n    cursor: pointer;\r\n    text-align: left;\r\n    border: 1px solid rgba(255, 255, 255, .2);\r\n    \r\n    &:disabled {\r\n        backgroundColor: {data[1].colorit};\r\n        cursor: default;\r\n    }`;\r\n    \r\n    \r\n     const ButtonToggle = \r\n    //  styled(Button)\r\n    `background-color: #231d2b;\r\n      ${({ active }) =>\r\n        active &&\r\n        `backgroundColor: {data[1].colorit};`\r\n      }\r\n    `;\r\n    \r\n\r\n    return (\r\n        types.map(type => (\r\n          <ButtonToggle\r\n            key={type}\r\n            active={active === type}\r\n            onClick={() => setActive(type)}\r\n          >\r\n            {type}\r\n          </ButtonToggle>\r\n        ))\r\n    );\r\n}\r\nexport default ButtonGroup;"],"mappings":";;AAAA,OAAQA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACxC,OAAOC,MAAM,MAAM,WAAW;AAC9B,OAAOC,IAAI,MAAM,aAAa;AAAC;AAE/B,MAAMC,KAAK,GAAG,CAAC,cAAc,EAAE,yBAAyB,EAAE,sBAAsB,CAAC;AAGjF,SAASC,WAAW,GAAE;EAAA;EAClB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC;EAC9C,MAAMI,MAAM;EACZ;EACC;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;EAGD,MAAMC,YAAY;EACnB;EACC;AACL,QAAQ;IAAA,IAAC;MAAEH;IAAO,CAAC;IAAA,OACXA,MAAM,IACL,qCAAoC;EAAA,CACtC;AACP,KAAK;EAGD,OACIF,KAAK,CAACM,GAAG,CAACC,IAAI,iBACZ,QAAC,YAAY;IAEX,MAAM,EAAEL,MAAM,KAAKK,IAAK;IACxB,OAAO,EAAE,MAAMJ,SAAS,CAACI,IAAI,CAAE;IAAA,UAE9BA;EAAI,GAJAA,IAAI;IAAA;IAAA;IAAA;EAAA,QAMZ,CAAC;AAEV;AAAC,GAhDQN,WAAW;AAAA,KAAXA,WAAW;AAiDpB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}